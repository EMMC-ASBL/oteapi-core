name: CI - Tests

on:
  pull_request:
  push:
    branches:
      - 'master'
      - 'push-action/**'  # Allow pushing to protected branches (using CasperWA/push-protected)

jobs:
  basic_tests:
    name: External
    uses: SINTEF/ci-cd/.github/workflows/ci_tests.yml@v1
    with:
      # pre-commit
      run_pre-commit: true
      python_version_pre-commit: "3.9"
      install_extras: "[dev]"
      skip_pre-commit_hooks: pylint,pylint-strategies,pylint-tests

      # pylint & safety
      python_version_pylint_safety: "3.9"

      run_pylint: true
      pylint_runs: |
        --rcfile=.pylintrc --ignore-paths=oteapi/strategies/,tests/ --extension-pkg-whitelist='pydantic' *.py oteapi
        --rcfile=.pylintrc --extension-pkg-whitelist='pydantic' --disable=R,C oteapi/strategies
        --rcfile=.pylintrc --extension-pkg-whitelist='pydantic' --disable=C0415,W0621,import-error --recursive=yes tests

      run_safety: true
      # Ignore ID 44715 for now.
      # See this NumPy issue for more information: https://github.com/numpy/numpy/issues/19038
      safety_options: --ignore=44715

      # Build package
      run_build_package: true
      python_version_package: "3.9"
      build_cmd: "python -m build"

      # Build documentation
      run_build_docs: true
      python_version_docs: "3.9"
      update_python_api_ref: true
      update_docs_landing_page: true
      package_dirs: oteapi
      full_docs_dirs: models
      landing_page_replacements: |
        (LICENSE),(LICENSE.md)
        scheme\`](oteapi/models/resourceconfig.py),scheme\`][oteapi.models.resourceconfig.ResourceConfig.downloadUrl]
        mediaType\`](oteapi/models/resourceconfig.py),mediaType\`][oteapi.models.resourceconfig.ResourceConfig.mediaType]
        accessService\`](oteapi/models/resourceconfig.py),accessService\`][oteapi.models.resourceconfig.ResourceConfig.accessService]
        (oteapi/models/filterconfig.py),[oteapi.models.filterconfig.FilterConfig.filterType]
        (oteapi/models/functionconfig.py),[oteapi.models.functionconfig.FunctionConfig.functionType]
        (oteapi/models/mappingconfig.py),[oteapi.models.mappingconfig.MappingConfig.mappingType]
        (oteapi/models/transformationconfig.py),[oteapi.models.transformationconfig.TransformationConfig.transformationType]
      warnings_as_errors: true

  pytest:
    name: pytest (${{ matrix.os[1] }}-py${{ matrix.python-version }})
    runs-on: ${{ matrix.os[0] }}

    strategy:
      fail-fast: false
      matrix:
        os:
        - ["ubuntu-latest", "linux"]
        - ["windows-latest", "windows"]
        python-version: ["3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Set up Python ${{ matrix.python-version}}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version}}

    - name: Install linux system dependencies
      if: matrix.os[1] == 'linux'
      run: sudo apt update && sudo apt install -y ghostscript

    - name: Install windows system dependencies
      if: matrix.os[1] == 'windows'
      run: |
        $url = "https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs9550/gs9550w64.exe"
        $outpath = "${{ github.workspace }}\ghostscript.exe"
        Invoke-WebRequest -Uri $url -OutFile $outpath
        $args = @("/S")
        Start-Process -Filepath $outpath -ArgumentList $args
      shell: powershell

    - name: Install Python dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel
        pip install -e .[dev]

    - name: Test with pytest
      run: pytest -vvv --cov-report=xml

    - name: Upload coverage to Codecov
      if: matrix.python-version == 3.9 && github.repository == 'EMMC-ASBL/oteapi-core'
      uses: codecov/codecov-action@v3
      with:
        files: coverage.xml
        flags: ${{ matrix.os[1] }}

    - name: Test with optional libs
      run: |
        pip install ase numpy
        pytest -vvv --cov-report=xml

    - name: Upload coverage to Codecov
      if: matrix.python-version == 3.9 && github.repository == 'EMMC-ASBL/oteapi-core'
      uses: codecov/codecov-action@v3
      with:
        files: coverage.xml
        flags: ${{ matrix.os[1] }}-extra_libs
