name: CI - Tests

on:
  pull_request:
  push:
    branches:
      - 'master'
      - 'push-action/**'  # Allow pushing to protected branches (using CasperWA/push-protected)

jobs:
  basic_tests:
    name: External
    uses: SINTEF/ci-cd/.github/workflows/ci_tests.yml@v2.7.1
    with:
      # pre-commit
      run_pre-commit: true
      python_version_pre-commit: "3.9"
      install_extras: "[dev]"

      # pylint & safety
      python_version_pylint_safety: "3.9"

      run_pylint: false
      run_safety: true

      # Build package
      run_build_package: true
      python_version_package: "3.9"
      build_libs: "flit"
      build_cmd: "flit build"

      # Build documentation
      run_build_docs: true
      python_version_docs: "3.9"
      update_python_api_ref: true
      update_docs_landing_page: true
      package_dirs: oteapi
      full_docs_dirs: |
        models
        strategies/download
        strategies/filter
        strategies/mapping
        strategies/parse
        strategies/resource
        strategies/transformation
      landing_page_replacements: |
        (LICENSE),(LICENSE.md)
        scheme\`](oteapi/models/resourceconfig.py),scheme\`][oteapi.models.resourceconfig.ResourceConfig.downloadUrl]
        mediaType\`](oteapi/models/resourceconfig.py),mediaType\`][oteapi.models.resourceconfig.ResourceConfig.mediaType]
        accessService\`](oteapi/models/resourceconfig.py),accessService\`][oteapi.models.resourceconfig.ResourceConfig.accessService]
        (oteapi/models/filterconfig.py),[oteapi.models.filterconfig.FilterConfig.filterType]
        (oteapi/models/functionconfig.py),[oteapi.models.functionconfig.FunctionConfig.functionType]
        (oteapi/models/mappingconfig.py),[oteapi.models.mappingconfig.MappingConfig.mappingType]
        (oteapi/models/transformationconfig.py),[oteapi.models.transformationconfig.TransformationConfig.transformationType]
      warnings_as_errors: true

  pytest-linux:
    name: pytest (linux-py${{ matrix.python-version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]

    services:
      redis:
        image: redis:latest
        volumes:
          - redis-persist:/data
        ports:
          - "6379:6379"

    env:
      OTEAPI_REDIS_HOST: localhost
      OTEAPI_REDIST_PORT: 6379

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version}}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version}}

    - name: Install system dependencies
      run: sudo apt update && sudo apt install -y ghostscript

    - name: Install Python dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel
        pip install -e .[testing]

    - name: Test with pytest
      run: |
        pytest -vvv --cov-report=xml --cov=oteapi --durations=10
        pytest --cov-report=xml:strategies.xml --cov=oteapi/strategies --durations=10

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.9' && github.repository == 'EMMC-ASBL/oteapi-core'
      uses: codecov/codecov-action@v3
      with:
        files: coverage.xml
        flags: linux

    - name: Upload strategies coverage to Codecov
      if: matrix.python-version == '3.9' && github.repository == 'EMMC-ASBL/oteapi-core'
      uses: codecov/codecov-action@v3
      with:
        files: strategies.xml
        flags: linux-strategies

  pytest-win:
    name: pytest (windows-py${{ matrix.python-version }})
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version}}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version}}

    - name: Install system dependencies
      run: |
        $url = "https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs9550/gs9550w64.exe"
        $outpath = "${{ github.workspace }}\ghostscript.exe"
        Invoke-WebRequest -Uri $url -OutFile $outpath
        $args = @("/S")
        Start-Process -Filepath $outpath -ArgumentList $args
      shell: powershell

    - name: Install Python dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel
        pip install -e .[testing]

    - name: Test with pytest
      run: |
        pytest -vvv --cov-report=xml --cov=oteapi --durations=10
        pytest --cov-report=xml:strategies.xml --cov=oteapi/strategies --durations=10

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.9' && github.repository == 'EMMC-ASBL/oteapi-core'
      uses: codecov/codecov-action@v3
      with:
        files: coverage.xml
        flags: windows

    - name: Upload strategies coverage to Codecov
      if: matrix.python-version == '3.9' && github.repository == 'EMMC-ASBL/oteapi-core'
      uses: codecov/codecov-action@v3
      with:
        files: strategies.xml
        flags: windows-strategies
